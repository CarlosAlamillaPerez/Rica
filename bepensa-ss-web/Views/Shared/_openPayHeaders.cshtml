@using Microsoft.Extensions.Options
@inject IOptions<GlobalSettings> app
@inject IOptions<OpenPaySettings> openPay
@{
    OpenPaySettings config = openPay.Value;

    string comercioId = app.Value.Produccion ? config.ComercioIdProd : config.ComercioIdQA;
    string key = app.Value.Produccion ? config.KeyProd : config.KeyQA;

    string sandbox = app.Value.Produccion ? "false" : "true";
}

<meta http-equiv="content-type" content="text/html; charset=UTF-8">
<script type="text/javascript"
        src="https://ajax.googleapis.com/ajax/libs/jquery/1.11.0/jquery.min.js" nonce="@ViewBag.Nonce"></script>
<script type="text/javascript"
        src="https://openpay.s3.amazonaws.com/openpay.v1.min.js" nonce="@ViewBag.Nonce"></script>
<script type='text/javascript'
        src="https://openpay.s3.amazonaws.com/openpay-data.v1.min.js" nonce="@ViewBag.Nonce"></script>

<script type="text/javascript" nonce="@ViewBag.Nonce">
    $(document).ready(function () {

        OpenPay.setId('@comercioId');
        OpenPay.setApiKey('@key');
        OpenPay.setSandboxMode(@sandbox);
        //Se genera el id de dispositivo
        var deviceSessionId = OpenPay.deviceData.setup("formCanje", "deviceSessionId");

        $('#pay-button').on('click', function (event) {
            event.preventDefault();
            AbrirLoad();
            
            EliminarEspacios();

            ValidarCVV();

            ValidarTarjeta();

            ValidarCVV();

            ValidarFecha();

            if (ValidarTitular() && ValidarTarjeta() && ValidarCVV() && ValidarFecha()) {
                $("#pay-button").prop("disabled", true);
                OpenPay.token.extractFormAndCreate('payment-form', sucess_callbak, error_callbak);
            } else {
                CerrarLoad();
            }

        });

        var sucess_callbak = function (response) {
            AbrirLoad();
            var token_id = response.data.id;
            $('#token_id').val(token_id);
            $('#token_id_canje').val(token_id);

            var url = '@Url.Action("ProcesarCarritoConTarjeta", "Carrito", new { area = "Socio" })';

            $('#formCanje').attr('action', url).submit();

            ActualizarTotalPremios();

            CerrarLoad();
        };

        var error_callbak = function (response) {
            var desc = response.data.description != undefined ? response.data.description : response.message;
            //alert("ERROR [" + response.status + "] " + desc);
            $("#pay-button").prop("disabled", false);


            $('#contError').show();
            $('#contErrorText').html('Ha ocurrido un problema al procesar tu solicitud.');
            $('#contErrorDescription').html(desc);
            
            CerrarLoad();

            $('#contError').show();

            // Ocultar el contenedor de error después de 5 segundos
            setTimeout(function() {
                $('#contError').fadeOut('slow');
                $('#holder_nameError').text('');
            }, 5000);
        };

        $('#holder_name').on('input', function () {
            $('#holder_nameError').text('');

            let val = $(this).val();

            val = val.replace(/\d/g, '');

            val = val.normalize('NFD').replace(/[\u0300-\u036f]/g, '');

            $(this).val(val);
        });

        function ValidarTitular() {
            let resultado = true;
            let msgError = '';
            const regex = /^[A-Za-zÁÉÍÓÚáéíóúÑñÜü' ]{2,60}$/;

            let $name = $('#holder_name').val();

            if (!$name || $name.trim().length === 0) {
                msgError = '@Html.Raw(CodigoDeError.TitularTarjetaRequerido.GetDescription())';
                resultado = false;
            }

            if (resultado && $name.trim().length > 0){
                if (!regex.test($name.trim())){
                    msgError = '@Html.Raw(CodigoDeError.TitularTarjetaInvalido.GetDescription())';
                    resultado = false;
                }
            }

            $('#holder_nameError').text(msgError);

            return resultado;
        }

        $('#card_number_display').on('input', function (){
            $('#card_numberError').text('');

            let val = $(this).val().replace(/\D/g, '');

            val = val.substring(0, 16);

            let formatted = val.replace(/(.{4})/g, '$1 ').trim();

            $(this).val(formatted);

            ValidarTarjeta();
        });

        function ValidarTarjeta() {
            let resultado = true;
            let msgError = '';
            const regex = /^[0-9]{13,16}$/;

            let $card = $('#card_number_display').val();

            let $cardFormateada = $card.trim().replace(/\D/g, '').substring(0,16)

            if (!$cardFormateada || $cardFormateada.trim().length < 13) {
                msgError = '@Html.Raw(CodigoDeError.TarjetaRequerido.GetDescription())';
                resultado = false;
            }

            if (resultado && $cardFormateada.trim().length > 0){
                if (!regex.test($cardFormateada.trim())){
                    msgError = '@Html.Raw(CodigoDeError.NumeroTarjetaInvalido.GetDescription())';
                    resultado = false;
                }
            }

            $('#card_numberError').text(msgError);

            if (resultado) {
                $('#card_number').val($cardFormateada);
            }

            return resultado;
        }

        $('#expiration_month').on('input', function (){
            $('#expirationError').text('');
        });
        
         $('#expiration_year').on('input', function (){
            $('#expirationError').text('');
    });

        function ValidarFecha(){
            let resultado = true;
            let msgError = '';
            
            let mes = $('#expiration_month').val();
            let anio = $('#expiration_year').val();

            if (!mes || !anio || mes.trim().length <= 0 ||  anio.trim().length <= 0) {
                msgError = '@Html.Raw(CodigoDeError.FechaExpiracionInvalida.GetDescription())';
                resultado = false;
            }

            $('#expirationError').text(msgError);

            return resultado;
        }

        $('#cvv2').on('input', function (){
            $('#cvv2Error').text('');

            let val = $(this).val().replace(/\D/g, '');

            val = val.substring(0, 4).trim();

            $(this).val(val);
        });

        function ValidarCVV() {
            let resultado = true;
            let msgError = '';
            const regex = /^[0-9]{0,4}$/;

            let $cvv = $('#cvv2').val();

            if (!$cvv || $cvv.trim().length === 0) {
                msgError = '@Html.Raw(CodigoDeError.CVVTarjetaRequerido.GetDescription())';
                resultado = false;
            }

            if (resultado && $cvv.trim().length > 0){

                if (!regex.test($cvv.trim())){
                    msgError = '@Html.Raw(CodigoDeError.CVVTarjetaInvalido.GetDescription())';
                    resultado = false;
                }
            }

            if (resultado && $cvv.trim().length < 3) {
                msgError = '@Html.Raw(CodigoDeError.CVVTarjetaInvalido.GetDisplayName())';
                resultado = false;
            }

            $('#cvv2Error').text(msgError);

            return resultado;
        }

        function EliminarEspacios() {
            let $name = $('#holder_name');
            let $card = $('#card_number');
            let $cvv = $('#cvv2');

            let nameFormatted = $name.val().trim();
            let cardFormatted = $card.val().trim();
            let cvvFormatted = $cvv.val().trim();

            $name.val(nameFormatted);
            $card.val(cardFormatted);
            $cvv.val(cvvFormatted);
        }
    });
</script>

<style>
    @Html.Raw("@charset \"UTF-8\";")
    @Html.Raw("@import url('https://fonts.googleapis.com/css?family=Lato:300,400,700');")

    ::-webkit-input-placeholder {
        font-style: italic;
    }

    :-moz-placeholder {
        font-style: italic;
    }

    ::-moz-placeholder {
        font-style: italic;
    }

    :-ms-input-placeholder {
        font-style: italic;
    }

    /* body {
        float: left;
        margin: 0;
        padding: 0;
        width: 100%;
    } */

    strong {
        font-weight: 700;
    }

    /* a {
        cursor: pointer;
        display: block;
        text-decoration: none;
    } */

        a.button {
            border-radius: 5px 5px 5px 5px;
            -webkit-border-radius: 5px 5px 5px 5px;
            -moz-border-radius: 5px 5px 5px 5px;
            text-align: center;
            font-size: 21px;
            font-weight: 400;
            padding: 12px 0;
            width: 100%;
            display: table;
            background: #E51F04;
            background: -moz-linear-gradient(top, #E51F04 0%, #A60000 100%);
            background: -webkit-gradient(linear, left top, left bottom, color-stop(0%,#E51F04), color-stop(100%,#A60000));
            background: -webkit-linear-gradient(top, #E51F04 0%,#A60000 100%);
            background: -o-linear-gradient(top, #E51F04 0%,#A60000 100%);
            background: -ms-linear-gradient(top, #E51F04 0%,#A60000 100%);
            background: linear-gradient(top, #E51F04 0%,#A60000 100%);
            filter: progid:DXImageTransform.Microsoft.gradient( startColorstr='#E51F04', endColorstr='#A60000',GradientType=0 );
        }

            a.button i {
                margin-right: 10px;
            }

            a.button.disabled {
                background: none repeat scroll 0 0 #ccc;
                cursor: default;
            }

    /* .bkng-tb-cntnt {
        float: left;
        width: 100%;
    } */

        .bkng-tb-cntnt a.button {
            color: #fff;
            float: right;
            font-size: 18px;
            padding: 5px 20px;
            width: auto;
        }

            .bkng-tb-cntnt a.button.o {
                background: none repeat scroll 0 0 rgba(0, 0, 0, 0);
                color: #e51f04;
                border: 1px solid #e51f04;
            }

            .bkng-tb-cntnt a.button i {
                color: #fff;
            }

            .bkng-tb-cntnt a.button.o i {
                color: #e51f04;
            }

            .bkng-tb-cntnt a.button.right i {
                float: right;
                margin: 2px 0 0 10px;
            }

            .bkng-tb-cntnt a.button.left {
                float: left;
            }

            .bkng-tb-cntnt a.button.disabled.o {
                border-color: #ccc;
                color: #ccc;
            }

                .bkng-tb-cntnt a.button.disabled.o i {
                    color: #ccc;
                }

    /* .pymnts {
        float: left;
        width: 100%;
    } */

        /* .pymnts * {
            float: left;
        } */

    /* .sctn-row {
        margin-bottom: 35px;
        width: 100%;
    } */

    /* .sctn-col {
        width: 375px;
    } */

        /* .sctn-col.l {
            width: 425px;
        }
 */
        .sctn-col input {
            border: 1px solid #ccc;
            font-size: 18px;
            line-height: 24px;
            padding: 10px 12px;
            width: 100%;
        }

        /* .sctn-col label {
            text-align: start;
            font-size: 24px;
            line-height: 24px;
            margin-bottom: 10px;
            width: 100%;
        } */

        /* .sctn-col.x3 {
            width: 300px;
        }

            .sctn-col.x3.last {
                width: 200px;
            }

            .sctn-col.x3 input {
                width: 210px;
            }

            .sctn-col.x3 a {
                float: right;
            } */

    /* .pymnts-sctn {
        width: 100%;
    } */

    /* .pymnt-itm {
        margin: 0 0 3px;
        width: 100%;
    } */

        .pymnt-itm h2 {
            background-color: #e9e9e9;
            font-size: 24px;
            line-height: 24px;
            margin: 0;
            padding: 28px 0 28px 20px;
        }

        .pymnt-itm.active h2 {
            cursor: default;
        }

        .pymnt-itm div.pymnt-cntnt {
            display: none;
        }

        .pymnt-itm.active div.pymnt-cntnt {
            background-color: #f7f7f7;
            display: block;
            padding: 0 0 30px;
        }

    .pymnt-cntnt div.sctn-row {
        margin: 20px 30px 0;
        /* width: 90%; */
    }

        /* .pymnt-cntnt div.sctn-row div.sctn-col {
            width: 345px;
        }

            .pymnt-cntnt div.sctn-row div.sctn-col.l {
                width: 395px;
            }

            .pymnt-cntnt div.sctn-row div.sctn-col input {
                width: 303px;
            }
        */
            .pymnt-cntnt div.sctn-row div.sctn-col.half {
                width: 155px;
            }

                .pymnt-cntnt div.sctn-row div.sctn-col.half.l {
                    float: left;
                    width: 190px;
                }
                
                .pymnt-cntnt div.sctn-row div.sctn-col.half input {
                    width: 113px;
                }

            .pymnt-cntnt div.sctn-row div.sctn-col.cvv {
                background-image: url("./images/openpay/cvv.png");
                background-position: 156px center;
                background-repeat: no-repeat;
                padding-bottom: 30px;
            }

                /* .pymnt-cntnt div.sctn-row div.sctn-col.cvv div.sctn-col.half input {
                    width: 110px;
                } */

    .openpay {
        float: right;
        /* height: 60px; */
        margin: 10px 30px 0 0;
        /* width: 435px; */
    }

        .openpay div.logo {
            background-image: url("./images/openpay/openpay.png");
            background-position: left bottom;
            background-repeat: no-repeat;
            border-right: 1px solid #ccc;
            font-size: 12px;
            font-weight: 400;
            height: 65px;
            padding: 15px 20px 0 0;
        }

        .openpay div.shield {
            background-image: url("./images/openpay/security.png");
            background-position: left bottom;
            background-repeat: no-repeat;
            font-size: 12px;
            font-weight: 400;
            margin-left: 20px;
            padding: 20px 0 0 40px;
            width: 200px;
        }

    .card-expl {
        /* float: left; */
        /* height: 80px; */
        margin: 20px 0;
    }

        .card-expl div {
            background-position: left 45px;
            background-repeat: no-repeat;
            height: 70px;
            padding-top: 10px;
        }

            .card-expl div.debit {
                background-image: url("./images/openpay/cards2.png");
                margin-left: 20px;
                max-width: 540px;
            }

            .card-expl div.credit {
                background-image: url("./images/openpay/cards1.png");
                border-right: 1px solid #ccc;
                /* margin-left: 30px; */
            }

        .card-expl p {
            font-weight: 400 !important;
            margin: 0;
        }

    #holder_name {
        text-transform: uppercase;
    }

    #holder_name::placeholder {
        text-transform: none;
    }

    .modal-body select{
        border-color: #f40000;
        color: rgb(68, 68, 68);
    }
</style>